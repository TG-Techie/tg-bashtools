#!/bin/bash 

# Copyright 2022 Jonah Yolles-Murphy (@tg-techie, "jay")

# Permission is hereby granted, free of charge, to any person obtaining a copy of this 
# software and associated documentation files (the "Software"), to deal in the Software 
# without restriction, including without limitation the rights to use, copy, modify, 
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to 
# permit persons to whom the Software is furnished to do so, subject to the following 
# conditions:

# The above copyright notice and this permission notice shall be included in all copies 
# or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
# CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR 
# THE USE OR OTHER DEALINGS IN THE SOFTWARE.



HELP="
NAME
    uzurl - curl and unzip a url into a new file or directory

SYNOPSIS
    uzurl <url> <destination>

DESCRIPTOIN
    depends on curl and unzip
"

# print help text if -h or --help are present
if [[ "$*" == *"-h"* ]] || [[ "$*" == *"--help"* ]] ; then
    echo "$HELP"
    exit
fi

# parse out arguments
SOURCE_URL=$1
DESTINATION=$2

# if either is empty, throw a fit
# FUTURE: ? maybe use file name from url as default name as ./<filefromurl.xxx>?
if [[ $SOURCE_URL == "" ]] ; then
    >&2 echo "uzurl: no url provided"
    exit 1
fi

if [[ $DESTINATION == "" ]] ; then 
    >&2 echo "uzurl: no destination provided"
    exit 1
fi

# if the destination already exists, just... just no
if [[ -e $DESTINATION ]] ; then
    >&2 echo "uzurl: $DESTINATION: already exists"
    exit 1
fi

# make sure there is a directory we can use
TEMPFILE=$(mktemp)
chmod +rw $TEMPFILE

# silence unzip output with -q for quiet
echo "curl $SOURCE_URL >> $TEMPFILE"
# curl $SOURCE_URL >> $TEMPFILE
curl $SOURCE_URL >> $TEMPFILE \
&& unzip -q $TEMPFILE -d $DESTINATION \
&& rm $TEMPFILE

exit $?
